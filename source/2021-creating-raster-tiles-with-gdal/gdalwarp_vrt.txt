gdalwarp -t_srs EPSG:3857 -s_srs "+proj=lcc +lat_0=38 +lon_0=-82.5 +lat_1=40.0333333333333 +lat_2=38.7333333333333 +x_0=600000 +y_0=0 +ellps=GRS80 +towgs84=-0.9956,1.9013,0.5215,0.025915,0.009246,0.011599,-0.00062 +units=us-ft +no_defs" -r average -multi -srcnodata 255 -of VRT g:\data\imagery\_testing\gas_dept_3in.tif g:\data\imagery\_testing\gas_dept_3in_3857.tif.vrt

https://www.cogeo.org/developers-guide.html

gdal_translate gas_dept_3in_3857.tif.vrt gas_dept_3in_3857_cogt.tif -of COG -co COMPRESS=JPG

http://cog-validate.radiant.earth/html

1. Download Rasters

Load Raster data into Desktop GIS and check the accruacy with GPS points.

2. Build Mosaic

Here we are building a mosaic of the original TIFF files, forcing them to the NAD83 without performing any transformation, and removing  the native alpha band and replacing it with our own. This last steps helps avoid artifacts in the output file.

gdalbuildvrt -b 1 -b 2 -b 3 -addalpha -a_srs EPSG:3735 FAI_2018_3IN_MOSAIC.vrt \\192.168.168.22\2018_Orthos\TIFFS\TIFFS\*.tif

If we bring this data into QGIS we will see the infamous black border around our mosaic. This is because we removed the Alpha band. Once we create the Cloud Optimized GeoTIFF or COG, we will see that this black border is removed. While we could render 0 as NODATA, this would render all black pixels in our image as NODATA as well which would create artifacts in the output file.

3. Create the Cloud Optimized GeoTIFF
 - The COG driver will automatically create a mask band for transparency

gdal_translate FAI_2018_3IN_MOSAIC.tif FAI_2018_3IN_COG.tif -of COG -co COMPRESS=JPEG -co BIGTIFF=YES -co OVERVIEWS=IGNORE_EXISTING -co QUALITY=85

This is the file that our desktop users will load onto their machines.
The COG format is purpose built for use over low bandwidth connections, so it is perfect for using over a city-wide file-share network. In testing it is faster than loading a mosaic in our enterprise SQL database.

This will create a COG approximately 10% the size of the raw TIFFs.

4. Create the Virtual Raster in WebMercator

This VRT will be used as the input for the raster tiles. 
Note that the best outcomes came from exporting a TIFF from Arc* in 3857, but the difference is negligible.

gdalwarp cog_3735.tif cog_virtual_3857.vrt ^
-t_srs EPSG:3857 ^
-s_srs "+proj=lcc +lat_0=38 +lon_0=-82.5 +lat_1=40.0333333333333 +lat_2=38.7333333333333 +x_0=600000 +y_0=0 +ellps=GRS80 +towgs84=-0.9956,1.9013,0.5215,0.025915,0.009246,0.011599,-0.00062 +units=us-ft +no_defs" ^
-of VRT ^
-dstalpha ^
-overwrite

Load the raster_3857.vrt into desktop GIS. Examine the visual quality. Check the accuracy vs data exported into WebMercator from ArcPro using the default transformation (WGS 1984 ITRF00 <> NAD 1983)

Use one of the tiling methods to create the raster tiles. First we will use gdal2tiles then we will use Generate XYZ Tiles (mbtiles).

"...the horizontal discrepancy between the NAD 83 (CORS93) and NAD 83
(HARN) positions for a control point is almost always less than 10 cm, and the horizontal
discrepancy between any two NAD 83 (CORSxx) positions for a control point is almost
always less than 2 cm." ~ https://www.fs.fed.us/GRAIP/downloads/GPS/Understanding%20the%20Evolution%20of%20WGS%201984%20and%20NAD%201983%20(Rev2).pdf

https://desktop.arcgis.com/en/arcmap/latest/map/projections/pdf/geographic_transformations.pdf


